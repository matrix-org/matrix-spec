# Copyright 2016 OpenMarket Ltd
# Copyright 2018 New Vector Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.1.0
info:
  title: Matrix Application Service API
  version: 1.0.0
paths:
  "/rooms/{roomAlias}":
    get:
      summary: Query if a room alias should exist on the application service.
      description: |-
        This endpoint is invoked by the homeserver on an application service to query
        the existence of a given room alias. The homeserver will only query room
        aliases inside the application service's `aliases` namespace. The
        homeserver will send this request when it receives a request to join a
        room alias within the application service's namespace.
      operationId: queryRoomByAlias
      security:
        - homeserverAccessToken: []
      parameters:
        - in: path
          name: roomAlias
          description: The room alias being queried.
          required: true
          example: "#magicforest:example.com"
          schema:
            type: string
      responses:
        "200":
          description: |-
            The application service indicates that this room alias exists. The
            application service MUST have created a room and associated it with
            the queried room alias using the client-server API. Additional
            information about the room such as its name and topic can be set
            before responding.
          content:
            application/json:
              schema:
                type: object
              examples:
                response:
                  value: {}
        "401":
          description: |-
            The homeserver has not supplied credentials to the application service.
            Optional error information can be included in the body of this response.
          content:
            application/json:
              schema:
                $ref: ../client-server/definitions/errors/error.yaml
              examples:
                response:
                  value: {
                    "errcode": "COM.EXAMPLE.MYAPPSERVICE_UNAUTHORIZED"
                  }
        "403":
          description: The credentials supplied by the homeserver were rejected.
          content:
            application/json:
              schema:
                $ref: ../client-server/definitions/errors/error.yaml
              examples:
                response:
                  value: {
                    "errcode": "COM.EXAMPLE.MYAPPSERVICE_FORBIDDEN"
                  }
        "404":
          description: |-
            The application service indicates that this room alias does not exist.
            Optional error information can be included in the body of this response.
          content:
            application/json:
              schema:
                $ref: ../client-server/definitions/errors/error.yaml
              examples:
                response:
                  value: {
                    "errcode": "COM.EXAMPLE.MYAPPSERVICE_NOT_FOUND"
                  }
servers:
  - url: "{protocol}://{hostname}{basePath}"
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      hostname:
        default: localhost:8008
      basePath:
        default: /_matrix/app/v1
components:
  securitySchemes:
    homeserverAccessToken:
      $ref: definitions/security.yaml#/homeserverAccessToken
