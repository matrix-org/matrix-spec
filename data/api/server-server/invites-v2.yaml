# Copyright 2018-2019 New Vector Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.1.0
info:
  title: Matrix Federation Invite User To Room API
  version: 1.0.0
paths:
  "/invite/{roomId}/{eventId}":
    put:
      summary: Invites a remote user to a room
      description: |-
        **Note:**
        This API is nearly identical to the v1 API with the exception of the request
        body being different, and the response format fixed.

        Invites a remote user to a room. Once the event has been  signed by both the inviting
        homeserver and the invited homeserver, it can be sent to all of the servers in the
        room by the inviting homeserver.

        This endpoint is preferred over the v1 API as it is more useful for servers. Senders
        which receive a 400 or 404 response to this endpoint should retry using the v1
        API as the server may be older, if the room version is "1" or "2".

        Note that events have a different format depending on the room version - check the
        [room version specification](/rooms) for precise event formats. **The request and response
        bodies here describe the common event fields in more detail and may be missing other
        required fields for a PDU.**
      operationId: sendInviteV2
      security:
        - signedRequest: []
      parameters:
        - in: path
          name: roomId
          description: The room ID that the user is being invited to.
          required: true
          example: "!abc123:matrix.org"
          schema:
            type: string
        - in: path
          name: eventId
          description: The event ID for the invite event, generated by the inviting server.
          required: true
          example: $abc123:example.org
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                room_version:
                  type: string
                  description: The version of the room where the user is being invited to.
                  example: "2"
                event:
                  $ref: definitions/invite_event.yaml
                invite_room_state:
                  type: array
                  description: |-
                    An optional list of [stripped state events](/client-server-api/#stripped-state)
                    to help the receiver of the invite identify the room.
                  items:
                    $ref: ../../event-schemas/schema/core-event-schema/stripped_state.yaml
                  example:
                    $ref: ../../event-schemas/examples/invite_room_state.json
              required:
                - room_version
                - event
            example: {
              "room_version": "2",
              "event": {
                "room_id": "!somewhere:example.org",
                "type": "m.room.member",
                "state_key": "@joe:elsewhere.com",
                "origin": "example.org",
                "origin_server_ts": 1549041175876,
                "sender": "@someone:example.org",
                "content": {
                    "membership": "invite"
                },
                "signatures": {
                  "example.com": {
                    "ed25519:key_version": "SomeSignatureHere"
                  },
                }
              }
            }
        required: true
      responses:
        "200":
          description: |-
            The event with the invited server's signature added. All other fields of the events
            should remain untouched. Note that events have a different format depending on the
            room version - check the [room version specification](/rooms) for precise event formats.
          content:
            application/json:
              schema:
                type: object
                description: An object containing the signed invite event.
                title: Event Container
                properties:
                  event:
                    $ref: definitions/invite_event.yaml
                required:
                  - event
              examples:
                response:
                  value: {
                    "event": {
                      "room_id": "!somewhere:example.org",
                      "type": "m.room.member",
                      "state_key": "@someone:example.org",
                      "origin": "example.org",
                      "origin_server_ts": 1549041175876,
                      "sender": "@someone:example.org",
                      "unsigned": {
                        "invite_room_state": [
                          {
                            "type": "m.room.name",
                            "sender": "@bob:example.org",
                            "state_key": "",
                            "content": {
                              "name": "Example Room"
                            }
                          },
                          {
                            "type": "m.room.join_rules",
                            "sender": "@bob:example.org",
                            "state_key": "",
                            "content": {
                              "join_rule": "invite"
                            }
                          }
                        ]
                      },
                      "content": {
                        "membership": "invite"
                      },
                      "signatures": {
                        "example.com": {
                          "ed25519:key_version": "SomeSignatureHere"
                        },
                        "elsewhere.com": {
                          "ed25519:k3y_versi0n": "SomeOtherSignatureHere"
                        }
                      }
                    }
                  }
        "400":
          description: |-
            The request is invalid or the room the server is attempting
            to join has a version that is not listed in the `ver`
            parameters.

            The error should be passed through to clients so that they
            may give better feedback to users.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../client-server/definitions/errors/error.yaml
                  - type: object
                    properties:
                      room_version:
                        type: string
                        description: |-
                          The version of the room. Required if the `errcode`
                          is `M_INCOMPATIBLE_ROOM_VERSION`.
              examples:
                response:
                  value: {
                    "errcode": "M_INCOMPATIBLE_ROOM_VERSION",
                    "error": "Your homeserver does not support the features required to join this room",
                    "room_version": "3"
                  }
        "403":
          description: |-
            The invite is not allowed. This could be for a number of reasons, including:

            * The sender is not allowed to send invites to the target user/homeserver.
            * The homeserver does not permit anyone to invite its users.
            * The homeserver refuses to participate in the room.
          content:
            application/json:
              schema:
                $ref: ../client-server/definitions/errors/error.yaml
              examples:
                response:
                  value: {
                    "errcode": "M_FORBIDDEN",
                    "error": "User cannot invite the target user."
                  }
servers:
  - url: "{protocol}://{hostname}{basePath}"
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      hostname:
        default: localhost:8448
      basePath:
        default: /_matrix/federation/v2
components:
  securitySchemes:
    signedRequest:
      $ref: definitions/security.yaml#/signedRequest
